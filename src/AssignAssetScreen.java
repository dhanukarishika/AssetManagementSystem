/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author dhanukarishika
 */import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import com.toedter.calendar.JDateChooser;

public class AssignAssetScreen extends javax.swing.JFrame {

    /**
     * Creates new form AssignAssetScreen
     */
    public void loadTable() {
    try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(
            "jdbc:oracle:thin:@localhost:1521/XEPDB1", "asset", "asset");

        PreparedStatement pst = con.prepareStatement(
            "SELECT * FROM asset_assignment ORDER BY assign_id");
        ResultSet rs = pst.executeQuery();

        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"ID", "Asset", "Employee", "Assign Date", "Return Date", "Status"}, 0
        ) {
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("assign_id"),
                rs.getString("asset_name"),
                rs.getString("employee_name"),
                rs.getDate("assign_date"),
                rs.getDate("return_date"),
                rs.getString("status")
            });
        }

        tblAssignments.setModel(model);
        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading table: " + e.getMessage());
    }
}

    public void loadAssets() {
    try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(
            "jdbc:oracle:thin:@localhost:1521/XEPDB1", "asset", "asset");

        PreparedStatement pst = con.prepareStatement(
            "SELECT asset_name FROM asset_register WHERE status = 'Available'");
        ResultSet rs = pst.executeQuery();

        cmbAsset.removeAllItems();
        while (rs.next()) {
            cmbAsset.addItem(rs.getString("asset_name"));
        }

        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading assets: " + e.getMessage());
    }
}

    public AssignAssetScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAsset = new javax.swing.JLabel();
        cmbAsset = new javax.swing.JComboBox<>();
        lblEmployee = new javax.swing.JLabel();
        txtEmployee = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        dateAssign = new com.toedter.calendar.JDateChooser();
        btnBack = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAssignments = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblAsset.setText("Asset");

        cmbAsset.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblEmployee.setText("Employee Name");

        lblDate.setText("Assign date");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        tblAssignments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAssignments);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmployee)
                            .addComponent(lblDate)
                            .addComponent(lblAsset))))
                .addGap(183, 183, 183)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateAssign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtEmployee, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cmbAsset, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(243, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnAssign)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReturn)
                .addGap(75, 75, 75))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsset)
                    .addComponent(cmbAsset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployee)
                    .addComponent(txtEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateAssign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnReturn))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
    try {
        String asset = cmbAsset.getSelectedItem().toString();
        String emp = txtEmployee.getText();
        java.util.Date date = dateAssign.getDate();
        java.sql.Date sqlDate = new java.sql.Date(date.getTime());

        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(
            "jdbc:oracle:thin:@localhost:1521/XEPDB1", "asset", "asset");

        // Insert assignment
        PreparedStatement pst = con.prepareStatement(
            "INSERT INTO asset_assignment VALUES (asset_assign_seq.NEXTVAL, ?, ?, ?, NULL, 'Assigned')");
        pst.setString(1, asset);
        pst.setString(2, emp);
        pst.setDate(3, sqlDate);
        pst.executeUpdate();

        // Update asset status
        PreparedStatement pst2 = con.prepareStatement(
            "UPDATE asset_register SET status = 'Assigned' WHERE asset_name = ?");
        pst2.setString(1, asset);
        pst2.executeUpdate();

        con.close();
        JOptionPane.showMessageDialog(this, "Asset assigned ✅");
        loadAssets();
        loadTable();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
       try{
        int row = tblAssignments.getSelectedRow();

        String asset = tblAssignments.getValueAt(row, 1).toString();

        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(
            "jdbc:oracle:thin:@localhost:1521/XEPDB1", "asset", "asset");

        // Update assignment table
        PreparedStatement pst = con.prepareStatement(
            "UPDATE asset_assignment SET return_date = SYSDATE, status = 'Returned' WHERE asset_name = ? AND status = 'Assigned'");
        pst.setString(1, asset);
        pst.executeUpdate();

        // Update asset status
        PreparedStatement pst2 = con.prepareStatement(
            "UPDATE asset_register SET status = 'Available' WHERE asset_name = ?");
        pst2.setString(1, asset);
        pst2.executeUpdate();

        con.close();
        JOptionPane.showMessageDialog(this, "Asset returned ✅");
        loadAssets();
        loadTable();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new MainScreenAdmin().setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignAssetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignAssetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignAssetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignAssetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignAssetScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReturn;
    private javax.swing.JComboBox<String> cmbAsset;
    private com.toedter.calendar.JDateChooser dateAssign;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAsset;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JTable tblAssignments;
    private javax.swing.JTextField txtEmployee;
    // End of variables declaration//GEN-END:variables
}
